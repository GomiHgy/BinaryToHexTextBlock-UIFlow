{"category":"BinaryToHexText","color":"#f17f42","blocks":["__BinaryToHexText_BinaryToHexText"],"jscode":"// Block __BinaryToHexText_BinaryToHexText\nvar __BinaryToHexText_BinaryToHexText_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"BinaryToHexText\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"byteList\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"byteList\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"textVariable\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"textVariable\"\n        }\n    ],\n    \"colour\": \"#f17f42\"\n};\n\nwindow['Blockly'].Blocks['__BinaryToHexText_BinaryToHexText'] = {\n    init: function() {\n        this.jsonInit(__BinaryToHexText_BinaryToHexText_json);\n    }\n};\n\nwindow['Blockly'].Python['__BinaryToHexText_BinaryToHexText'] = function(block) {\n    var byteList = Blockly.Python.valueToCode(block, 'byteList', Blockly.Python.ORDER_NONE);\nvar textVariable = Blockly.Python.valueToCode(block, 'textVariable', Blockly.Python.ORDER_NONE);\n    return `import binascii\ndef BinaryToHexText(_list ):\n  return binascii.hexlify(bytearray(_list)).upper().decode('utf-8')\n\n${textVariable} = BinaryToHexText(${byteList})` + \"\\n\";\n};\n\n","code":{"BinaryToHexText":["window['Blockly'].Python['__BinaryToHexText_BinaryToHexText'] = function(block) {\n    var byteList = Blockly.Python.valueToCode(block, 'byteList', Blockly.Python.ORDER_NONE);\nvar textVariable = Blockly.Python.valueToCode(block, 'textVariable', Blockly.Python.ORDER_NONE);\n    return `import binascii\ndef BinaryToHexText(_list ):\n  return binascii.hexlify(bytearray(_list)).upper().decode('utf-8')\n\n${textVariable} = BinaryToHexText(${byteList})` + \"\\n\";\n};\n\n","import binascii\ndef BinaryToHexText(_list ):\n  return binascii.hexlify(bytearray(_list)).upper().decode('utf-8')\n\n${textVariable} = BinaryToHexText(${byteList})"]}}